/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

//---------------------Include-----------------
#include <stdint.h>
#include "timer.h"
#include "Ucglib.h"
#include "stm32f401re_gpio.h"
#include "stm32f401re_rcc.h"


//--------------------Macro------------------
static ucg_t ucg;
#define GPIO_PIN_SET 			1
#define GPIO_PIN_RESET 			0

#define LED_GPIO_PORT 		GPIOA
#define LED_GPIO_PIN			GPIO_Pin_5
#define LED_GPIO_RCC			RCC_AHB1Periph_GPIOA

#define BUTTON_GPIO_PORT 		GPIOB
#define BUTTON_GPIO_PIN			GPIO_Pin_4
#define BUTTON_GPIO_RCC			RCC_AHB1Periph_GPIOC


//--------------------Init stat--------------
static void Led_Init(void){
	//Khai bao kieu du lieu
	GPIO_InitTypeDef GPIO_InitStruct;

	//Bat block cho GPIOA
	RCC_AHB1PeriphClockCmd(LED_GPIO_RCC, ENABLE);

	//Khai bao pin cua led
	GPIO_Initstruct.GPIO_Pin = LED_GPIO_PIN;

	//Khai bao GPIO output
	GPIO_Initstruct.GPIO_Mode = GPIO_Mode_OUT;

	//Cau hinh toc do
	GPIO_Initstruct.GPIO_Speed = GPIO_Speed_50MHz;

	//Chon kieu push pull
	GPIO_Initstruct.GPIO_OType = GPIO_OType_PP;

	//Cau hinh chan cho GPIO
	GPIO_Init(LED_GPIO_PORT, &GPIO_Initstruct);
}

static void Button_Init(void){
	//Khai bao kieu du lieu
	GPIO_InitTypeDef GPIO_Initstruct2;

	//Bat block cho GPIOA
	RCC_AHB1PeriphClockCmd(BUTTON_GPIO_PORT, ENABLE);

	//Khai bao pin cua led
	GPIO_Initstruct2.GPIO_Pin = BUTTON_GPIO_PIN;

	//Khai bao GPIO input
	GPIO_Initstruct2.GPIO_Mode = GPIO_Mode_IN;

	//Cau hinh toc do
	GPIO_Initstruct2.GPIO_Speed = GPIO_Speed_50MHz;

	//Chon kieu pull up
	GPIO_Initstruct2.GPIO_PuPd = GPIO_PuPd_UP;

	//Cau hinh chan cho GPIO
	GPIO_Init(BUTTON_GPIO_PORT, &GPIO_Initstruct2);
}

static void Led_control(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, uint8_t status){
	if (status == GPIO_PIN_SET){
		GPIO_SetBits(GPIOx, GPIO_Pin);
	}else if(status == GPIO_PIN_RESET){
		GPIO_ResetBits(GPIOx, GPIO_Pin);
	}
}

static uint8_t Button_GetLogic(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin){
	return GPIO_ReadInputDataBit(GPIOx, GPIO_Pin);
}

void AppInitCommon(){
	char a[] = "Hello World";
	const char *p = &a;
	TimerInit();
	Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID);
	ucg_ClearScreen(&ucg);
	ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
	ucg_SetColor(&ucg, 0, 255, 255, 255);
	ucg_SetColor(&ucg, 1, 0, 0, 0);
	ucg_SetRotate180(&ucg);
	ucg_DrawString(&ucg, 60, 24, 0, p);
}

int main(void)
{
	//AppInitCommon();
	Led_Init();
	while (1){
	//uint8_t sta = Button_GetLogic(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN);
		GPIO_SetBits(GPIOA, GPIO_Pin_4);
	}
}
